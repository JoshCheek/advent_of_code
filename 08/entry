#!/usr/bin/env ruby

def build_tree(data, names)
  num_children, num_metadata = data.shift 2
  name     = names.next
  children = num_children.times.map { build_tree data, names }
  metadata = data.shift num_metadata
  { name: name, metadata: metadata, children: children }
end

def each(tree, &block)
  return to_enum :each, tree unless block
  name     = tree[:name]
  children = tree[:children]
  metadata = tree[:metadata]
  block.call name, children, metadata
  children.each { |child| each child, &block }
  nil
end

data  = $stdin.read.scan(/\d+/).map(&:to_i)
names = Enumerator.new do |y|
  name = 'A'
  loop do
    y << name
    name = name.succ
  end
end

tree = build_tree data, names

require 'pp'
puts "----- Tree -----"
pp tree

puts

puts "----- Metadata Sum -----"
p each(tree).sum { |name, children, metadata| metadata.sum }
