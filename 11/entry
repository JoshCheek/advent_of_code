#!/usr/bin/env ruby

def power_level(x, y, serial_number)
  rack_id = x + 10
  power_level = y * rack_id
  power_level += serial_number
  power_level *= rack_id
  power_level = power_level.digits[2] || 0
  power_level -= 5
  power_level
end

power_level 3, 5, 8      # => 4
power_level 122, 79, 57  # => -5
power_level 217, 196, 39 # => 0
power_level 101, 153, 71 # => 4

def build_grid(serial_number)
  1.upto(300).map do |y|
    1.upto(300).map do |x|
      power_level(x, y, serial_number)
    end
  end
end

def all_squares(grid)
  return to_enum :all_squares, grid unless block_given?
  grid.each_cons(3).each.with_index(1) do |rows, y|
    rows.map { |row| row.each_cons(3).to_a }.transpose.each.with_index(1) do |square, x|
      yield x, y, square
    end
  end
end

def best_square(grid)
  all_squares(grid).max_by { |x, y, rows| rows.flatten.sum }
end



best_square(build_grid(18)) # => [33, 45, [[4, 4, 4], [3, 3, 4], [1, 2, 4]]]
  .first(2)                 # => [33, 45]

best_square(build_grid(42)) # => [21, 61, [[4, 3, 3], [3, 3, 4], [3, 3, 4]]]
  .first(2)                 # => [21, 61]

# part 1
best_square(build_grid(8868))         # => [241, 40, [[4, 3, 4], [4, -1, 4], [4, 4, 4]]]
  .first(2)                           # => [241, 40]
  .tap { |x, y| break p "#{x},#{y}" } # => "241,40"

